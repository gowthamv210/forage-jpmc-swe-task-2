From 58a1c74989138b2cacec2b6558e9b1b536c36709 Mon Sep 17 00:00:00 2001
From: gowtham <gowthamv0210@gmail.com>
Date: Wed, 26 Jun 2024 21:11:09 +0530
Subject: [PATCH] Create Patch File

---
 src/App.tsx   | 16 +++++++++++++---
 src/Graph.tsx | 10 ++++++++--
 2 files changed, 21 insertions(+), 5 deletions(-)

diff --git a/src/App.tsx b/src/App.tsx
index 0728518..e1ffe3b 100755
--- a/src/App.tsx
+++ b/src/App.tsx
@@ -8,6 +8,7 @@ import './App.css';
  */
 interface IState {
   data: ServerRespond[],
+  showGraph: boolean,
 }
 
 /**
@@ -22,6 +23,7 @@ class App extends Component<{}, IState> {
       // data saves the server responds.
       // We use this state to parse data down to the child element (Graph) as element property
       data: [],
+        showGraph: false,
     };
   }
 
@@ -29,18 +31,26 @@ class App extends Component<{}, IState> {
    * Render Graph react component with state.data parse as property data
    */
   renderGraph() {
+      if (this.state.showGraph) {
     return (<Graph data={this.state.data}/>)
+          }
+
   }
 
   /**
    * Get new data from server and update the state with the new data
    */
   getDataFromServer() {
+      let x = 0;
+      const interval = setInterval(() => {
     DataStreamer.getData((serverResponds: ServerRespond[]) => {
-      // Update the state by creating a new array of data that consists of
-      // Previous data in the state and the new data from server
-      this.setState({ data: [...this.state.data, ...serverResponds] });
+      this.setState({ data: serverResponds,showGraph:true });
     });
+    x++;
+    if (x>1000) {
+        clearInterval(interval);
+    }
+  },100);
   }
 
   /**
diff --git a/src/Graph.tsx b/src/Graph.tsx
index 3b2a7da..a799c5b 100644
--- a/src/Graph.tsx
+++ b/src/Graph.tsx
@@ -14,7 +14,7 @@ interface IProps {
  * Perspective library adds load to HTMLElement prototype.
  * This interface acts as a wrapper for Typescript compiler.
  */
-interface PerspectiveViewerElement {
+interface PerspectiveViewerElement extends HTMLElement{
   load: (table: Table) => void,
 }
 
@@ -32,7 +32,13 @@ class Graph extends Component<IProps, {}> {
 
   componentDidMount() {
     // Get element to attach the table from the DOM.
-    const elem: PerspectiveViewerElement = document.getElementsByTagName('perspective-viewer')[0] as unknown as PerspectiveViewerElement;
+     const elem = document.getElementsByTagName('perspective-viewer')[0] as unknown as PerspectiveViewerElement;
+    //Adding More Attributes to element as this is what gets graphed
+    elem.setAttribute('view','y_line');
+    elem.setAttribute('column-pivots', '["stock"]');
+    elem.setAttribute('row-pivots','["timestamp"]');
+    elem.setAttribute('columns','["top_ask_price"]');
+    elem.setAttribute('aggregates', '{"stock": "distinct count", "top_price_ask": "avg", "top_bid_price": "avg", "timestamp": "distinct count"}');
 
     const schema = {
       stock: 'string',
-- 
2.41.0.windows.2

